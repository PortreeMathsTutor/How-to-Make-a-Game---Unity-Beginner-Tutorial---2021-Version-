using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Bird : MonoBehaviour
{
    [SerializeField] float _launchForce = 500f;
    [SerializeField] float _maxDragDistance = 5f;
    [SerializeField] float _speed = 5f;

    public static bool goBackToBeginningHere = false;
    Vector2 _startPosition;
    Rigidbody2D _rigidbody2D;
    SpriteRenderer _spriteRenderer;
    private Vector2 _trueStartPosition;

    public bool IsDragging { get; private set; }
    public bool IsBirdMouseDown { get; private set; }

    void Awake()
    {
        _rigidbody2D = GetComponent<Rigidbody2D>();
        _spriteRenderer = GetComponent<SpriteRenderer>();
        _trueStartPosition = _rigidbody2D.position;
    }



    // Start is called before the first frame update
    void Start()
    {
        _startPosition = _rigidbody2D.position;
        _rigidbody2D.isKinematic = true;
    }

    void OnMouseDown()
    {
        IsBirdMouseDown = true;
        _spriteRenderer.color = Color.red;
    }
    void OnMouseUp()
    {
        IsDragging = false;
        Vector2 currentPosition = _rigidbody2D.position;
        Vector2 direction = _startPosition - currentPosition;
        direction.Normalize();
        _rigidbody2D.isKinematic = false;
        _rigidbody2D.AddForce(direction * _launchForce);
        _spriteRenderer.color = Color.white;
    }

    void OnMouseDrag()
    {
        IsBirdMouseDown = false;
           IsDragging = true;
        Vector3 mousePosition = Camera.main.ScreenToWorldPoint(Input.mousePosition);

        Vector2 desiredPosition = mousePosition;

        float distance = Vector2.Distance(desiredPosition, _startPosition);
        if (distance > _maxDragDistance)
        {
            Vector2 direction = desiredPosition - _startPosition;
            direction.Normalize();
            desiredPosition = _startPosition + (direction * _maxDragDistance);
        }

        if (desiredPosition.x > _startPosition.x)
            desiredPosition.x = _startPosition.x;

        _rigidbody2D.position = desiredPosition;
    }

    // Update is called once per frame
    void Update()
    {

    }
    void OnCollisionEnter2D(Collision2D collision)
    {
     /*  if (collision.gameObject.tag == "Obsticle")
       {
            Collider2D collider = collision.collider;
            ContactPoint2D contact = collision.contacts[0];
            Vector3 pos = contact.point;
            _startPosition = new Vector2(pos.x-1, _startPosition.y);
            StartCoroutine(ResetAfterDelay());
        }
       else
        {*/
            Collider2D collider = collision.collider;
            ContactPoint2D contact = collision.contacts[0];
            Vector3 pos = contact.point;
            _startPosition = new Vector2(pos.x-1, _startPosition.y);
            StartCoroutine(ResetAfterDelay());
      // }
    }
    IEnumerator ResetAfterDelay()
    {
        yield return new WaitForSeconds(3);
        Debug.Log("OnCollisionEnter2D");
        _rigidbody2D.position = _startPosition;
        _rigidbody2D.isKinematic = true;
        _rigidbody2D.velocity = Vector2.zero;
       
    }
}
